{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["ClientFetchingExample","state","loading","error","apiKey","localStorage","getItem","downloadLink","cache","filename","filesize","isCached","handleInputChange","event","_this$setState","target","value","name","_this","setState","setApiKey","preventDefault","setItem","alert","checkLink","params","URLSearchParams","append","axios","post","then","response","data","Object","assign","catch","render","_this$state$cache","this","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","style","textAlign","width","margin","onSubmit","type","onChange","Fragment","Component"],"mappings":"oKAuBMA,sJACJC,MAAQ,CACNC,SAAS,EACTC,OAAO,EACPC,OAAQC,aAAaC,QAAQ,UAAYD,aAAaC,QAAQ,UAAY,GAC1EC,aAAc,GACdC,MAAO,CACLC,SAAU,GACVC,SAAU,GACVC,SAAU,OAQdC,kBAAoB,SAAAC,GAAS,IAAAC,EACrBC,EAASF,EAAME,OACfC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KAEpBC,EAAKC,WAALL,EAAA,IACGG,GAAOD,EADVF,OAKFM,UAAY,SAAAP,GACVA,EAAMQ,iBACNhB,aAAaiB,QAAQ,SAAUJ,EAAKjB,MAAMG,QAC1CmB,MAAK,2CAA4CL,EAAKjB,MAAMG,WAsD9DoB,UAAY,SAAAX,GACVA,EAAMQ,iBACNH,EAAKC,SAAS,CAAEjB,SAAS,IAEzB,IAAMuB,EAAS,IAAIC,gBACnBD,EAAOE,OAAO,SAAUtB,aAAaC,QAAQ,WAC7CmB,EAAOE,OAAO,UAAWT,EAAKjB,MAAMM,cACpCqB,IACGC,KAAK,4CAA6CJ,GAClDK,KAAK,SAAAC,GACJ,IAAMtB,EAAWsB,EAASC,KAAKvB,SACzBC,EAAWqB,EAASC,KAAKtB,SACzBC,EAAWoB,EAASC,KAAKD,SAE/Bb,EAAKC,SAAS,CACZjB,SAAS,EACTM,MAAKyB,OAAAC,OAAA,GACAhB,EAAKjB,MAAMO,MADX,CAEHC,WACAC,WACAC,iBAILwB,MAAM,SAAAhC,GACLe,EAAKC,SAAS,CAAEjB,SAAS,EAAOC,2CA5EtCiC,OAAA,WAAS,IAAAC,EAEkCC,KAAKrC,MAAMO,MAA5CC,EAFD4B,EAEC5B,SAAUC,EAFX2B,EAEW3B,SAAUC,EAFrB0B,EAEqB1B,SACtBP,EAASkC,KAAKrC,MAAMG,OAE1B,OACEmC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,UAAW,SAAUC,MAAO,QAASC,OAAQ,cAEzDN,EAAAC,EAAAC,cAAA,QAAMK,SAAUR,KAAKlB,WACnBmB,EAAAC,EAAAC,cAAA,uBAEEF,EAAAC,EAAAC,cAAA,SACEM,KAAK,OACL9B,KAAK,SACLD,MAAOZ,EACP4C,SAAUV,KAAK1B,qBAGnB2B,EAAAC,EAAAC,cAAA,UAAQM,KAAK,UAAb,WAGFR,EAAAC,EAAAC,cAAA,QAAMK,SAAUR,KAAKd,WACnBe,EAAAC,EAAAC,cAAA,6BAEEF,EAAAC,EAAAC,cAAA,SACEM,KAAK,OACL9B,KAAK,eACL+B,SAAUV,KAAK1B,qBAGnB2B,EAAAC,EAAAC,cAAA,UAAQM,KAAK,UAAb,WAGFR,EAAAC,EAAAC,cAAA,WACGH,KAAKrC,MAAMC,QACVqC,EAAAC,EAAAC,cAAA,wCACEhC,GAAYC,EACd6B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAS,SAAA,KACEV,EAAAC,EAAAC,cAAA,UAAKhC,GACL8B,EAAAC,EAAAC,cAAA,UAAK/B,GACL6B,EAAAC,EAAAC,cAAA,aAAQ9B,IAGV4B,EAAAC,EAAAC,cAAA,uCA5EwBS,aAkHrBlD","file":"component---src-pages-index-js-989e6d67b82b821acab9.js","sourcesContent":["import React, { Component } from 'react'\r\n// import { Link } from \"gatsby\"\r\nimport axios from 'axios'\r\n\r\n// import Layout from \"../components/layout\"\r\n// import Image from \"../components/image\"\r\n// import SEO from \"../components/seo\"\r\n\r\n// const IndexPage = () => (\r\n//   <Layout>\r\n//     <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\r\n//     <h1>Hi people</h1>\r\n//     <p>Welcome to your new Gatsby site.</p>\r\n//     <p>Now go build something great.</p>\r\n//     <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\r\n//       <Image />\r\n//     </div>\r\n//     <Link to=\"/page-2/\">Go to page 2</Link>\r\n//   </Layout>\r\n// )\r\n//\r\n// export default IndexPage\r\n\r\nclass ClientFetchingExample extends Component {\r\n  state = {\r\n    loading: false,\r\n    error: false,\r\n    apiKey: localStorage.getItem(\"apikey\") ? localStorage.getItem(\"apikey\") : '',\r\n    downloadLink: '',\r\n    cache: {\r\n      filename: '',\r\n      filesize: '',\r\n      isCached: '',\r\n    },\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   this.checkCache()\r\n  // }\r\n\r\n  handleInputChange = event => {\r\n    const target = event.target\r\n    const value = target.value\r\n    const name = target.name\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  setApiKey = event => {\r\n    event.preventDefault()\r\n    localStorage.setItem('apikey', this.state.apiKey)\r\n    alert(`Locally Stored API Key has been set to: ${this.state.apiKey}`)\r\n  }\r\n\r\n  render() {\r\n\r\n    const { filename, filesize, isCached } = this.state.cache\r\n    const apiKey = this.state.apiKey\r\n\r\n    return (\r\n      <div style={{ textAlign: 'center', width: '600px', margin: '50px auto' }}>\r\n\r\n        <form onSubmit={this.setApiKey}>\r\n          <label>\r\n            API Key\r\n            <input\r\n              type=\"text\"\r\n              name=\"apiKey\"\r\n              value={apiKey}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n\r\n        <form onSubmit={this.checkLink}>\r\n          <label>\r\n            Download Link\r\n            <input\r\n              type=\"text\"\r\n              name=\"downloadLink\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n\r\n        <div>\r\n          {this.state.loading ? (\r\n            <p>Please hold, checking cache</p>\r\n          ) : filename && filesize ? (\r\n            <>\r\n              <h2>{filename}</h2>\r\n              <h2>{filesize}</h2>\r\n              <h2>{`${isCached}`}</h2>\r\n            </>\r\n          ) : (\r\n            <p>Error checking cache</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // This data is fetched at run time on the client.\r\n  checkLink = event => {\r\n    event.preventDefault()\r\n    this.setState({ loading: true })\r\n\r\n    const params = new URLSearchParams()\r\n    params.append('apikey', localStorage.getItem(\"apikey\"))\r\n    params.append('items[]', this.state.downloadLink)\r\n    axios\r\n      .post('https://www.premiumize.me/api/cache/check', params)\r\n      .then(response => {\r\n        const filename = response.data.filename\r\n        const filesize = response.data.filesize\r\n        const isCached = response.data.response\r\n\r\n        this.setState({\r\n          loading: false,\r\n          cache: {\r\n            ...this.state.cache,\r\n            filename,\r\n            filesize,\r\n            isCached,\r\n          },\r\n        })\r\n      })\r\n      .catch(error => {\r\n        this.setState({ loading: false, error })\r\n      })\r\n  }\r\n}\r\n\r\nexport default ClientFetchingExample\r\n"],"sourceRoot":""}